name: CI / Build & Publish

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_BACKEND: ${{ env.REGISTRY }}/${{ github.repository_owner }}/ai-knowledge-hub-backend
  IMAGE_NAME_FRONTEND: ${{ env.REGISTRY }}/${{ github.repository_owner }}/ai-knowledge-hub-frontend
  PYTHON_VERSION: "3.11"

jobs:
  lint-test-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Run backend tests
        working-directory: backend
        run: |
          # run django tests
          python manage.py test --noinput

  build-and-push-images:
    needs: [lint-test-backend]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build backend image
        run: |
          docker build -t $IMAGE_NAME_BACKEND:latest -f backend/Dockerfile backend
          docker tag $IMAGE_NAME_BACKEND:latest $IMAGE_NAME_BACKEND:${{ github.sha }}

      - name: Build frontend image
        run: |
          docker build -t $IMAGE_NAME_FRONTEND:latest -f frontend/Dockerfile frontend
          docker tag $IMAGE_NAME_FRONTEND:latest $IMAGE_NAME_FRONTEND:${{ github.sha }}

      - name: Push images
        run: |
          docker push $IMAGE_NAME_BACKEND:latest
          docker push $IMAGE_NAME_BACKEND:${{ github.sha }}
          docker push $IMAGE_NAME_FRONTEND:latest
          docker push $IMAGE_NAME_FRONTEND:${{ github.sha }}

  deploy:
    needs: [build-and-push-images]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy placeholder
        run: echo "Add your deployment steps here (kubectl / cloud provider)" 
